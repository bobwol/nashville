#!/usr/bin/env ruby

require 'nashville'

require 'commander/import'
require 'terminal-table'

HighLine.track_eof = false # Fix for built-in Ruby
Signal.trap("INT") {} # Suppress backtrace when exiting command

program :version, Nashville::VERSION
program :description, 'A command-line interface for querying the iTunes Store'

program :help, 'Author', 'Mattt Thompson <m@mattt.me>'
program :help, 'Website', 'https://github.com/mattt'
program :help_formatter, :compact

default_command :help

command :search do |c|
  c.syntax = 'its search QUERY'
  c.summary = ''
  c.description = ''
  c.option '-m', '--media MEDIA', %w(movie podcast music musicVideo audiobook shortFilm tvShow software ebook all), 'The media type to search for'
  c.option '-e', '--entity ENTITY', 'The type of results to be returned, relative to the specified media type.'
  c.option '-a', '--attribute ATTRIBUTE', 'The attribute to be searched for in the stores, relative to the specified media type.'
  c.option '--limit LIMIT', 'The maximum number of results to return.'
  c.option '--language LANGUAGE', %w(en_us ja_jp), 'The language, English or Japanese, to use when returning search results.'
  c.option '-p', '--secret SECRET', 'Use a shared secret for auto-renewable subscription receipts'
  c.option '-X', '--[no-]explicit', 'Include explicit content in search results.'

  c.example 'search', 'its search "Jamiroquai"'

  c.action do |args, options|
    say_error "Missing search term" and abort unless term = args.first

    params = {}
    params[:term] = term
    params[:media] = options.media if options.media
    params[:entity] = options.entity if options.entity
    params[:attribute] = options.attribute if options.attribute
    params[:limit] = options.limit if options.limit
    params[:lang] = options.language if options.language

    begin
      results = client.search(params)

      enable_paging

      puts "#{results.length} #{results.length == 1 ? 'Result' : 'Results'}"
      puts

      results.each_with_index do |result, index|
        table = Terminal::Table.new :title => "Result #{index + 1}" do |t|
          result.keys.sort.each do |key|
            t << [key, result[key]]
          end
        end

        puts table
        puts
      end

    rescue => error
      say_error error.message and abort
    end
  end
end

command :preview do |c|
  c.syntax = 'its preview URL'
  c.summary = ''
  c.description = ''

  c.example 'description', 'its search "query"'

  c.action do |args, options|
    say_error "Missing receipt argument" and abort unless url = args.first

    `open "#{url}" -a "QuickTime Player.app"`
  end
end

private

def client
  @client ||= Nashville::Client.new
end
